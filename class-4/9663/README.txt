[9663] N-Queen (https://www.acmicpc.net/problem/9663)

 
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
10 초		128 MB		35290	19082	12566		53.595%

문제
----
N-Queen 문제는 크기가 N × N인 체스판 위에 퀸 N개를 서로 공격할 수 없게 놓는 문제이다.

N이 주어졌을 때, 퀸을 놓는 방법의 수를 구하는 프로그램을 작성하시오.

입력
----
첫째 줄에 N이 주어진다. (1 ≤ N < 15)

출력
----
첫째 줄에 퀸 N개를 서로 공격할 수 없게 놓는 경우의 수를 출력한다.

풀이
----
계속 시간제한 1~2초 문제만 풀어오다가 이번엔 10초인걸 보고 당황했었던 문제..
경우의 수를 따져보니 고개가 끄덕여졌었다
N x N 체스판에서 Queen을 한 cell에 놓을때마다 나머지 N-1 cell에 Queen을 놓을 수 있는지 확인해야하므로 시간복잡도는 O(n^n)이 된다...

최대 약 437,893,890,380,859,375번 연산해야하며, 이는 생각할 필요도 없이 시간초과다.

하지만, 각 cell마다 Queen을 놓을 수 있는지 여부를 따지기 위해선 결국 완전탐색을 해야한다.
 p.s) 완전탐색을 "Brute Force(무식한 힘)" 라고들 하더라.. 
그렇다면, 어떻게 저 많은 연산들을 적은 연산으로 해결할 수 있을까?

가장 먼저 떠올렸던 것은 Queen의 이동범위.
Queen은 상하좌우와 대각선으로 끝까지 이동이 가능하므로, 같은 행, 렬과 대각선 범위를 제외하고 다음 행에서 탐색을 진행하는 방향으로 생각해서 구현했더니 4초만에 통과하였다.
(완전탐색으로 풀면 최대 4,378,938,903초까지 걸린다)

다른 사람들은 어떻게 풀었나 궁금해서 블로그들을 둘러보다보니 "Back-Tracking Algorithm" 이라는 있어보이는 용어를 사용하던데..
처음보면 낯설게 느껴지는 용어지만, 내용을 들여다보면 DFS랑 100% 똑같다.