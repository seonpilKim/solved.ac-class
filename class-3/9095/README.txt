[9095] 1, 2, 3 더하기 (https://www.acmicpc.net/problem/9095)

문제
----
정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다. 합을 나타낼 때는 수를 1개 이상 사용해야 한다.

1+1+1+1
1+1+2
1+2+1
2+1+1
2+2
1+3
3+1
정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.

입력
----
첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다. n은 양수이며 11보다 작다.

출력
----
각 테스트 케이스마다, n을 1, 2, 3의 합으로 나타내는 방법의 수를 출력한다.

풀이
----
먼저 규칙성을 찾아 점화식을 세워야 한다.

1 = 1 (1)
2 = 2 (1+1 / 2)
3 = 4 (1+1+1, 1+2 / 2+1 + 3)
4 = 7 (1+1+1+1, 1+1+2, 1+2+1, 1+3 / 2+1+1, 2+2 / 3+1)

1, 2, 3의 합으로 4를 만드는 방법의 수를 따져보면
 - 1을 만드는 방법에 3을 더한 경우의 수 : 1
 - 2를 만드는 방법들에 2를 더한 경우의 수 : 2
 - 3을 만드는 방법들에 1을 더한 경우의 수 : 4
모두 더하면 1+2+4 = 7이 나오는 것을 확인할 수 있다.
즉, 점화식은 sum(n) = sum(n-1) + sum(n-2) + sum(n-3)으로 세울 수 있다.

또한, 재귀호출을 통해 위의 점화식을 구현하면, 이미 해결한 문제를 다시 반복적으로 해결하기 때문에 비효율적이다.

이러한 상황에선 Dynamic Programming(동적 프로그래밍)을 사용하는 것이 효율적이다.
이는 작은 값부터 해결하면서 Memoization(계산한 결과를 메모리에 저장)하여, 추후에 동일한 계산을 할 때 꺼내어 쓰는 방식이다.
